% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FastPCA.R
\name{FastPCA}
\alias{FastPCA}
\title{Fast PCA for large matrices}
\usage{
FastPCA(orig_dat, PCs = 2, cor = FALSE, precomp = FALSE)
}
\arguments{
\item{orig_dat}{matrix or data frame containing uncenter and unscaled data}

\item{PCs}{Number of principal components to calculate. Default is 2 and the
maximum is the number of columns of the input data.}

\item{cor}{Logical determining whether the covariance matrix or correlation
matrix should be used for calculating PCs. Default is FALSE meaning covariance.
TRUE indicates correlation}

\item{precomp}{Logical indicating whether to the raw input matrix should be
used for PCA. If TRUE, cor is ignored. Default is FALSE}
}
\value{
\item {scores}{Principal component scores for each PC}

\item {loadings}{ Component loadings}
}
\description{
PCA algorithm designed to run fast and scale well to large matrices
}
\details{
FastPCA is a simple function for performing PCA that has been
optimized for speed. FastPCA takes advantage of the PRIMME eigensolver which
allows for faster eigendecomposition than the base R eigen() function.
Additionally, we use optimized correlation and covariance functions from
coop to greatly increase overall speed compared to the base R functions.
This function does not use approximations so all results are identical to
those returned from stats::prcomp
}
\examples{
#Create a simulated matrix
x = matrix(runif(900,0,20), nrow = 30, ncol = 30)
#Get the first 10 PCs
PCs <- FastPCA(x, PCs = 10)
}
